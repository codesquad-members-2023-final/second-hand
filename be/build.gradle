buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

//    implementation("org.springframework.boot:spring-boot-starter-oauth2-client")

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

    //aws
    implementation 'com.amazonaws:aws-java-sdk-core:1.12.429'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.429'
    implementation 'software.amazon.awssdk:s3:2.16.83'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    testImplementation("com.navercorp.fixturemonkey:fixture-monkey-starter:0.6.8")
    testImplementation("com.navercorp.fixturemonkey:fixture-monkey-javax-validation:0.6.8")}


clean {
    delete file('src/main/generated')
}

tasks.named('test') {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

